scalar JSON

type Group {
  group_id: ID!
  name: JSON
  description: JSON
  hasimage: Boolean
}

type Layer {
  layer_id: ID!
  shortid: String!
  name: JSON
  description: JSON
  data_type: String
  remote: Boolean
  remote_host: String
  remote_layer_id: String
  status: String
  source: JSON
  license: String
  presets: JSON
  is_external: Boolean
  external_layer_type: String
  external_layer_config: JSON
  owned_by_group_id: String
  style: JSON
  legend_html: String
  labels: JSON
  settings: JSON
  extent_bbox: JSON
  preview_position: JSON
}

type LayerStats {
  stats: JSON
}

type Story {
  story_id: ID!
  title: JSON
  firstimage: String
  summary: JSON
  published: Boolean
  author: JSON
  owned_by_group_id: String
  groupname: JSON
  published_at: String
}

type Map {
  map_id: ID!
  title: JSON
  position: JSON
  style: JSON
  settings: JSON
  basemap: String
  created_at: String
  updated_at: String
  owned_by_group_id: String
  share_id: String
  has_screenshot: Boolean
}

type User {
  id: ID!
}

type PageConfig {
  headerConfig: JSON
  footerConfig: JSON
  mapConfig: JSON
}

type FeatureInfo  {
  feature:  {
    name: String
    type: String
    features: JSON
    layer_id: Int
    bbox: JSON
    mhid: String
  }
  notes: String
  photo: JSON
  layer: Layer
  canEdit: boolean
}


type Query {
  # Groups
  groups(locale: String): [Group] #locale is used to pre-sort alphabetically
  group(id: String!): Group
  featuredGroups(limits: Int): [Group]
  recentGroups(limits: Int): [Group]
  groupLayers(id: String!, includeMapInfo: Boolean): [Layer]
  groupMaps(id: String!): [Map]
  groupStories(id: String!): [Story]
  allowedToModifyGroup(id: String): Boolean
  groupMembers(id: String!): [User]

  # Layers
  layer(id: Int!): Layer
  layers: [Layer]
  featuredLayers(limits: Int): [Layer]
  recentLayers(limits: Int): [Layer]
  popularLayers(limits: Int, attachPermissions: Boolean): [Layer]
  layerStats: LayerStats
  allowedToModifyLayer(id: Int!): Boolean
  myLayers(limits: Int): [Layer]
  layerNotes: {notes: String}

  # Stories
  stories: [Story]
  story(id: Int!): Story
  featuredStories(limits: Int): [Story]
  recentStories(limits: Int, tags: [String]): [Story]
  allowedToModifyStory(id: Int!): Boolean

  # Maps
  maps(locale: String): [Map]
  map(id: Int!): Map
  featuredMaps(limits: Int): [Map]
  recentMaps(limits: Int): [Map]
  mapLayers(id: Int!, attachPermissions: Boolean): [Layer]
  allowedToModifyMap(id: Int!): Boolean
  myMaps: [Map]

  # Feature
  featureInfo(layer_Id: Int!, mhid: String!) FeatureInfo

  # Users
  #account: User

  # Other
  pageConfig: PageConfig
  mapConfig: JSON
  homeConfig: JSON
}

#type Mutation
